---
- name: Determine GitHub Pull Request
  set_fact:
    paddles_pull: "{{ paddles_branch | regex_replace( '^refs/pull/([^/]+)/.*$', '\\1') }}"

- name: Clone the repo and checkout pull request branch
  git:
    repo: "{{ paddles_repo }}"
    dest: "{{ paddles_repo_path }}"
    version: "pull-{{ paddles_pull }}"
    refspec: '+{{ paddles_branch }}:refs/remotes/origin/pull-{{ paddles_pull }}'
  become_user: "{{ paddles_user }}"
  tags:
    - repos
  when: paddles_pull is defined and paddles_pull != paddles_branch

- name: Checkout the repo
  git:
    repo: "{{ paddles_repo }}"
    dest: "{{ paddles_repo_path }}"
    version: "{{ paddles_branch }}"
  become_user: "{{ paddles_user }}"
  tags:
    - repos
  when: paddles_pull is not defined or paddles_pull == paddles_branch

- name: Install latest pip via pip
  pip:
    name: "pip"
    state: "latest"
    chdir: "{{ paddles_repo_path }}"
    virtualenv_python: "python3"
    virtualenv: "{{ paddles_repo_path }}/virtualenv"
  become_user: "{{ paddles_user }}"
- name: Install requirements via pip
  pip:
    chdir: "{{ paddles_repo_path }}"
    requirements: "./requirements.txt"
    virtualenv: "{{ paddles_repo_path }}/virtualenv"
  become_user: "{{ paddles_user }}"

- name: Run setup inside virtualenv
  command: "./virtualenv/bin/python setup.py develop"
  args:
    chdir: "{{ paddles_repo_path }}"
  changed_when: false
  become_user: "{{ paddles_user }}"

- name: Ship prod.py
  template:
    src: prod.py
    dest: "{{ paddles_repo_path }}/prod.py"
    owner: "{{ paddles_user }}"
    group: "{{ paddles_user }}"
    mode: 0755
  register: prod_conf
  tags:
    - config
