---
- name: Include secrets
  include_vars: "{{ secrets_path | mandatory }}/paddles.yml"
  no_log: true
  tags:
    - always

- name: Set repo location
  set_fact:
    paddles_repo_path: "/home/{{ paddles_user }}/paddles"
  tags:
    - always

- name: Set paddles_address
  set_fact:
    paddles_address: http://{{ ansible_hostname }}/
  when: paddles_address is not defined or not paddles_address.startswith('http')
  tags:
    - always

- name: Set db_host
  set_fact:
    db_host: "{% if paddles_containerized %}{{ inventory_hostname }}{% else %}localhost{% endif %}"
  tags:
    - always

- name: Set db_url
  set_fact:
    db_url: "postgresql+psycopg2://{{ paddles_db_user }}:{{ db_pass }}@{{ db_host }}/paddles"
  no_log: true
  tags:
    - always

- import_tasks: zypper_systems.yml
  when: ansible_pkg_mgr == "zypper"

- import_tasks: apt_systems.yml
  when: ansible_pkg_mgr == "apt"

# Yum systems support is not implemented yet.
- import_tasks: yum_systems.yml
  when: ansible_pkg_mgr == "yum"

# Set up the paddles user
- import_tasks: setup_user.yml

# Set up the actual paddles project
- import_tasks: setup_paddles.yml
  when: not paddles_containerized

# Set up the DB which paddles uses
- import_tasks: setup_db.yml
  tags:
    - db

# Set up docker if necessary
- import_tasks: setup_docker.yml
  when: paddles_containerized
  tags:
    - service

# Configure the system to run paddles as a daemon
- import_tasks: setup_service.yml
  when: not paddles_containerized
  tags:
    - service

# Configure nginx as a reverse proxy
- import_tasks: nginx.yml
  when:
    - not ansible_distribution is search("openSUSE")
